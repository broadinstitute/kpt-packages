# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
  labels:
    app.kubernetes.io/managed-by: gcp-cloud-build-deploy
    backstage.io/kubernetes-id: backstage-component-id
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      app.kubernetes.io/managed-by: gcp-cloud-build-deploy
      backstage.io/kubernetes-id: backstage-component-id
  template:
    metadata:
      labels:
        app: grafana
        app.kubernetes.io/managed-by: gcp-cloud-build-deploy
        backstage.io/kubernetes-id: backstage-component-id
    spec:
      serviceAccountName: grafana
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
                - amd64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - name: grafana
        image: grafana/grafana:11.1.0
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana
              key: admin_password
        - name: GF_SERVER_ROOT_URL
          value: "https://grafana.example.com" # kpt-set: https://${cert-name}
        - name: GF_AUTH_GOOGLE_ENABLED
          value: "true"
        - name: GF_AUTH_GOOGLE_SCOPES
          value: "openid email profile https://www.googleapis.com/auth/cloud-identity.groups.readonly"
        - name: GF_AUTH_GOOGLE_ROLE_ATTRIBUTE_PATH
          value: "contains(groups[*], 'admin@google.com') && 'GrafanaAdmin' || 'Viewer'" # kpt-set: contains(groups[*], '${grafana_admin_group}') && 'GrafanaAdmin' || 'Viewer'
        - name: GF_AUTH_GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: grafana
              key: client_id
        - name: GF_AUTH_GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: grafana
              key: client_secret
        - name: GF_AUTH_GOOGLE_ALLOWED_DOMAINS
          value: "example.com" # kpt-set: ${domain}
        - name: GF_AUTH_GOOGLE_HOSTED_DOMAIN
          value: "example.com" # kpt-set: ${domain}
        - name: GF_AUTH_GOOGLE_ALLOW_ASSIGN_GRAFANA_ADMIN
          value: "true"
        - name: GF_AUTH_GOOGLE_SKIP_ORG_ROLE_SYNC
          value: "false"
        - name: GF_DATABASE_TYPE
          value: "postgres"
        - name: GF_DATABASE_HOST
          value: "127.0.0.1:5432"
        - name: GF_DATABASE_USER
          value: "grafana@project-id.iam" # kpt-set: ${db_user}
        - name: GF_UNIFIED_ALERTING_ENABLED
          value: "true"
        - name: GF_UNIFIED_ALERTING_HA_LISTEN_ADDRESS
          value: "${POD_IP}:9094"
        - name: GF_UNIFIED_ALERTING_HA_PEERS
          value: "grafana-alerting.grafana:9094"
        - name: GF_UNIFIED_ALERTING_HA_UNIFIED_ADDRESS
          value: "${POD_IP}:9094"
        - name: GF_UNIFIED_ALERTING_HA_PEER_TIMEOUT
          value: "15s"
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: web
          containerPort: 3000
        - name: grafana-alert
          containerPort: 9094
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 3000
            scheme: HTTP
        readinessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 3000
            scheme: HTTP
        volumeMounts:
        - name: gmp-datasource-config
          mountPath: /etc/grafana/provisioning/datasources/prometheus-datasource.yaml
          subPath: prometheus-datasource.yaml
          readOnly: true
          # todo insert cloudsql proxy sidecar
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL Auth Proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.12.0
        args:
        # If connecting from a VPC-native GKE cluster, you can use the
        # following flag to have the proxy connect over private IP
        # - "--private-ip"

        # Enable structured logging with LogEntry format:
        - "--structured-logs"
        # Replace DB_PORT with the port the proxy should listen on
        - "--port=5432"
        # Use auto iam authn to authenticate with the Cloud SQL instance
        - "--auto-iam-authn"
        - "project-id:region:instance-name" # kpt-set: ${instance_connection_name} 
        securityContext:
          # The default Cloud SQL Auth Proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        # You should use resource requests/limits as a best practice to prevent
        # pods from consuming too many resources and affecting the execution of
        # other pods. You should adjust the following values based on what your
        # application needs. For details, see
        # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          requests:
            # The proxy's memory use scales linearly with the number of active
            # connections. Fewer open connections will use less memory. Adjust
            # this value based on your application's requirements.
            memory: "512Mi"
            # The proxy's CPU use scales linearly with the amount of IO between
            # the database and the application. Adjust this value based on your
            # application's requirements.
            cpu: ".5"
          limits:
            cpu: "1"
            memory: "2Gi"
      volumes:
      - name: gmp-datasource-config
        configMap:
          name: grafana-config
